version: "2"
services:  

  applications:
   image: tianon/true
   volumes:
     - ${APPS}:/var/www

  workspace:
    build:
      context: ./workspace
    volumes_from:
      - applications
    extra_hosts:
      - dockerhost:${DOCKER_HOST_IP}
    ports:
      - ${WORKSPACE_SSH_PORT}:22
    tty: true
    networks:
      - frontend
      - backend

  php-fpm:
    build:
      context: ./php-fpm
    volumes_from:
      - applications
    volumes:
      - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
    expose:
      - 9000
    depends_on:
      - workspace
    extra_hosts:
      - dockerhost:${DOCKER_HOST_IP}
    networks:
      - backend

  nginx:
    build:
      context: ./nginx
    volumes_from:
      - applications
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/ssl_keys/:/etc/nginx/ssl
    ports:
      - 80:80
      - 443:443
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  postgres:
    build: ./postgres
    volumes:
      - ${DATA_SAVE_PATH}/postgres:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_SAVE_PATH}/mysql:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  aws:
    build:
      context: ./aws
    volumes_from:
      - applications
    volumes:
      - ./aws/ssh_keys/:/root/.ssh
    depends_on:
      - workspace
    tty: true

networks:
  frontend:
  backend:
